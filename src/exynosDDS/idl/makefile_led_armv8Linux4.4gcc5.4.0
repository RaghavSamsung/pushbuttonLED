######################################################################
# makefile_led_armv8Linux4.4gcc5.4.0#
# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
# No duplications, whole or partial, manual or electronic, may be made
# without express written permission.  Any such copies, or
# revisions thereof, must display this notice unaltered.
# This code contains trade secrets of Real-Time Innovations, Inc.
#
#
# This makefile was automatically generated by rtiddsgen.
#
# To compile, type:
#         gmake -f makefile_led_armv8Linux4.4gcc5.4.0#
# Note: This makefile is only meant to build our example applications and
#       may require alterations to build on your system.
#
# This makefile assumes that your build environment is already correctly
# configured. (For example, the correct version of your compiler and
# linker should be on your PATH.)
######################################################################

# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := "/opt/rti_connext_dds-5.3.0"
endif

SOURCE_DIR = 

TARGET_ARCH = armv8Linux4.4gcc5.4.0

ifndef COMPILER
COMPILER = aarch64-linux-gnu-gcc
endif
COMPILER_FLAGS =

ifndef LINKER
LINKER = aarch64-linux-gnu-gcc
endif
LINKER_FLAGS =

SYSLIBS = -ldl -lnsl -lm -lpthread -lrt
DEFINES = -fpic -DRTI_UNIX -DRTI_LINUX -DRTI_64BIT 

ifndef DEBUG
DEBUG=0 
endif

ifeq ($(DEBUG),1)
COMPILER_FLAGS += -g -O0
DEBUG_SFX = d
else
DEBUG_SFX = 
endif
 
ifndef SHAREDLIB
SHAREDLIB=0
endif

ifeq ($(SHAREDLIB),1)
SHAREDLIB_SFX = 
else
SHAREDLIB_SFX = z
DEFINES += -DRTI_STATIC
endif

LIBUSB=/usr/include/libusb-1.0

INCLUDES =  -I. \
            -I$(LIBUSB) \
            -I$(NDDSHOME)/include \
            -I$(NDDSHOME)/include/ndds \

LIBS =  -L$(NDDSHOME)/lib/$(TARGET_ARCH) \
        -L$(PWD)/../lib \
        -lnddsc$(SHAREDLIB_SFX)$(DEBUG_SFX) \
        -lnddscore$(SHAREDLIB_SFX)$(DEBUG_SFX) \
         $(SYSLIBS) \
         $(PWD)/../lib/libusb.so \
         $(PWD)/../lib/libusb-1.0.so \
         $(PWD)/../lib/libudev.so.1 \
         $(PWD)/../lib/libcgmanager.so.0 \
         $(PWD)/../lib/libnih.so.1 \
         $(PWD)/../lib/libnih-dbus.so.1 \
         $(PWD)/../lib/libdbus-1.so.3 \

CDRSOURCES    = led.idl
SOURCES = \
        $(SOURCE_DIR)ledPlugin.c \
        $(SOURCE_DIR)led.c \
        $(SOURCE_DIR)ledSupport.c \
        $(SOURCE_DIR)libblinkstick.c

COMMONSOURCES = $(notdir $(SOURCES))

EXEC          = led_subscriber 
DIRECTORIES   = objs.dir objs/$(TARGET_ARCH).dir
COMMONOBJS    = $(COMMONSOURCES:%.c=objs/$(TARGET_ARCH)/%.o)

# We actually stick the objects in a sub directory to keep your directory clean.
$(TARGET_ARCH) : $(DIRECTORIES) $(COMMONOBJS) \
	$(EXEC:%=objs/$(TARGET_ARCH)/%.o) \
	$(EXEC:%=objs/$(TARGET_ARCH)/%)

objs/$(TARGET_ARCH)/% : objs/$(TARGET_ARCH)/%.o
	$(LINKER) $(LINKER_FLAGS)   -o $@ $@.o $(COMMONOBJS) $(LIBS)

objs/$(TARGET_ARCH)/%.o : $(SOURCE_DIR)%.c   $(SOURCE_DIR)led.h  
	$(COMPILER) $(COMPILER_FLAGS)  -o $@ $(DEFINES) $(INCLUDES) -c $<

  ledPlugin.c led.c ledSupport.c \
  ledPlugin.h led.h ledSupport.h : \
		led.idl
	$(NDDSHOME)/bin/rtiddsgen led.idl -replace -language C
#
# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;

